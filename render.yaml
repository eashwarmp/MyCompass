services:
  # Backend API Service
  - type: web
    name: acapal-events-api
    env: node
    buildCommand: cd api && npm install
    startCommand: cd api && node app.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: REDIS_URL
        fromDatabase:
          name: acapal-events-redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: PORT
        value: 10000
    healthCheckPath: /api/events
    autoDeploy: true
    plan: free
    numInstances: 1
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
    scaling:
      minInstances: 1
      maxInstances: 1
    disk:
      name: tmp
      mountPath: /tmp
      sizeGB: 1

  # Frontend Expo Service
  - type: web
    name: acapal-events-frontend
    env: node
    buildCommand: |
      npm install
      npm install -g expo-cli
      npx expo export:web
    startCommand: npx serve web-build
    envVars:
      - key: NODE_ENV
        value: production
      - key: REACT_APP_API_URL
        value: https://acapal-events-api.onrender.com
      - key: EXPO_PUBLIC_API_URL
        value: https://acapal-events-api.onrender.com
    healthCheckPath: /
    autoDeploy: true
    plan: free
    numInstances: 1
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Cache-Control
        value: no-cache, no-store, must-revalidate
    scaling:
      minInstances: 1
      maxInstances: 1

databases:
  - name: acapal-events-redis
    databaseName: acapal-events-redis
    plan: free
    ipAllowList: []
